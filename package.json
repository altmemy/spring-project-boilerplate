{
  "name": "spring-project-boilerplate",
  "displayName": "Spring Project Boilerplate",
  "publisher": "altmemy", 
  "description": "Quickly generate a standard folder structure for Spring Boot projects, including model, controller, service, repository, dto and mapper directories, to help you start coding faster.",
  "version": "1.0.1",
  "engines": {
    "vscode": "^1.100.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:spring-project-boilerplate.createStructure",
    "onCommand:spring-project-boilerplate.createEntity",
    "onCommand:spring-project-boilerplate.createEntityWithLayers",
    "onCommand:spring-project-boilerplate.generateMissingControllers",
    "onCommand:spring-project-boilerplate.generateMissingServices",
    "onCommand:spring-project-boilerplate.generateMissingRepositories",
    "onCommand:spring-project-boilerplate.generateDtoAndMapper",
    "onCommand:spring-project-boilerplate.generateSecurityClasses",
    "onCommand:spring-project-boilerplate.generateGlobalExceptionHandler"
  ],
  "main": "./out/extension.js",
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/altmemy/spring-project-boilerplate"
  },
  "contributes": {
    "commands": [
      {
        "command": "spring-project-boilerplate.createStructure",
        "title": "Create Spring Boot Structure",
        "category": "Spring Project Boilerplate"
      },
      {
        "command": "spring-project-boilerplate.createEntity",
        "title": "Create Entity (Model Only)",
        "category": "Spring Project Boilerplate"
      },
      {
        "command": "spring-project-boilerplate.createEntityWithLayers",
        "title": "Create Entity with Layers",
        "category": "Spring Project Boilerplate"
      },
      {
        "command": "spring-project-boilerplate.generateMissingControllers",
        "title": "Generate Missing Controllers",
        "category": "Spring Project Boilerplate"
      },
      {
        "command": "spring-project-boilerplate.generateMissingServices",
        "title": "Generate Missing Services",
        "category": "Spring Project Boilerplate"
      },
      {
        "command": "spring-project-boilerplate.generateMissingRepositories",
        "title": "Generate Missing Repositories",
        "category": "Spring Project Boilerplate"
      },
      {
        "command": "spring-project-boilerplate.generateDtoAndMapper",
        "title": "Generate DTO & Mapper",
        "category": "Spring Project Boilerplate"
      },
      {
        "command": "spring-project-boilerplate.generateSecurityClasses",
        "title": "Generate Spring Security Classes",
        "category": "Spring Project Boilerplate"
      },
      {
        "command": "spring-project-boilerplate.generateGlobalExceptionHandler",
        "title": "Generate Global Exception Handler",
        "category": "Spring Project Boilerplate"
      }
    ],
    "submenus": {
      "spring-project-boilerplate.menu": {
        "id": "spring-project-boilerplate.menu",
        "label": "Spring Project Boilerplate",
        "icon": "$(rocket)"
      }
    },
    "menus": {
      "explorer/context": [
        {
          "submenu": "spring-project-boilerplate.menu",
          "when": "(explorerResourceIsFolder && (resourceFilename == src || resourceFilename == model || resourceFilename == controller || resourceFilename == service || resourceFilename == repository)) || (resourceExtname == .java && (resourcePath =~ /model\\/|model\\|model\\/|model/))",
          "group": "navigation@1"
        }
      ],
      "spring-project-boilerplate.menu": [
        {
          "command": "spring-project-boilerplate.createStructure",
          "when": "resourceFilename == src",
          "group": "1_structure"
        },
        {
          "command": "spring-project-boilerplate.createEntity",
          "when": "resourceFilename == src",
          "group": "2_entity"
        },
        {
          "command": "spring-project-boilerplate.createEntityWithLayers",
          "when": "resourceFilename == src",
          "group": "3_entity_layers"
        },
        {
          "command": "spring-project-boilerplate.generateSecurityClasses",
          "when": "resourceFilename == src",
          "group": "4_security"
        },
        {
          "command": "spring-project-boilerplate.generateGlobalExceptionHandler",
          "when": "resourceFilename == src",
          "group": "5_exception"
        },
        {
          "command": "spring-project-boilerplate.generateMissingControllers",
          "when": "resourceFilename == controller",
          "group": "6_generate"
        },
        {
          "command": "spring-project-boilerplate.generateMissingServices",
          "when": "resourceFilename == service",
          "group": "6_generate"
        },
        {
          "command": "spring-project-boilerplate.generateMissingRepositories",
          "when": "resourceFilename == repository",
          "group": "6_generate"
        },
        {
          "command": "spring-project-boilerplate.generateDtoAndMapper",
          "when": "resourceExtname == .java && (resourcePath =~ /model\\/|model\\|model\\/|model/)",
          "group": "7_dto_mapper"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/vscode": "^1.100.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2"
  }
}
